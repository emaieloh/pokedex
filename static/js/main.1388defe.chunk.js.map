{"version":3,"sources":["components/NavigationBar.js","components/pokemons/Pokemon.js","components/pokemons/Pokemons.js","components/pokemons/PokemonInfo.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","pokemonTypes","this","props","types","map","type","to","key","id","React","Component","Pokemon","pokemon","name","className","src","img","alt","Pokemons","filteredType","pokemons","filter","includes","pokemonCardsFiltered","pokemonCardsAll","PokemonInfo","App","pokemonType","path","pokemonInfo","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mRAwBeA,E,uKAjBP,IAAMC,EAAeC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GACtC,OAAO,kBAAC,IAAD,CAAMC,GAAI,UAAYD,EAAME,IAAKF,GACpC,4BAAKA,OAIb,OACI,wBAAIG,GAAG,UACH,kBAAC,IAAD,CAAMF,GAAG,KAAI,wBAAIE,GAAG,OAAOD,IAAI,QAAlB,SACZP,O,GAbWS,IAAMC,WCoBnBC,E,uKAhBP,OACI,yBAAKH,GAAG,kBACJ,kBAAC,IAAD,CAAMF,GAAI,IAAML,KAAKC,MAAMU,QAAQC,MAC/B,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,gBAAgBb,KAAKC,MAAMU,QAAQC,MAClD,yBAAKE,IAAKd,KAAKC,MAAMU,QAAQI,IAAKC,IAAKhB,KAAKC,MAAMU,QAAQC,KAAMC,UAAU,gBAC1E,yBAAKA,UAAU,cAAcb,KAAKC,MAAMU,QAAQJ,W,GAVlDC,IAAMC,WC0BbQ,E,4MAxBXC,aAAe,EAAKjB,MAAMkB,SAASC,QAAO,SAAAT,GACtC,OAAOA,EAAQT,MAAMmB,SAAS,EAAKpB,MAAMG,S,uDAKzC,IAAIkB,EAAuBtB,KAAKkB,aAAaf,KAAI,SAAAQ,GAC7C,OAAO,kBAAC,EAAD,CAASL,IAAKK,EAAQJ,GAAII,QAASA,OAG1CY,EAAkBvB,KAAKC,MAAMkB,SAAShB,KAAI,SAAAQ,GAC1C,OAAO,kBAAC,EAAD,CAASL,IAAKK,EAAQJ,GAAII,QAASA,OAG9C,OACI,yBAAKE,UAAU,WACU,SAApBb,KAAKC,MAAMG,KAAkBmB,EAAkBD,O,GAlBzCd,IAAMC,WCmCde,E,uKAhCP,OACI,yBAAKX,UAAU,gBACX,yBAAKC,IAAKd,KAAKC,MAAMU,QAAQI,IAAKC,IAAKhB,KAAKC,MAAMU,QAAQC,KAAMC,UAAU,gBAC1E,yBAAKA,UAAU,aACX,4BAAKb,KAAKC,MAAMU,QAAQC,MACxB,6BACA,kfAQA,6uB,GAlBMJ,IAAMC,W,OC+NjBgB,E,4MAxNbN,SAAW,CACX,CACCP,KAAM,YACNL,GAAI,OACJQ,IAAK,+DACLb,MAAO,CAAC,QAAQ,WAEjB,CACCU,KAAM,UACNL,GAAI,OACJQ,IAAK,6DACLb,MAAO,CAAC,QAAQ,WAEjB,CACCU,KAAM,WACNL,GAAI,OACJQ,IAAK,8DACLb,MAAO,CAAC,QAAQ,WAEjB,CACCU,KAAM,aACNL,GAAI,OACJQ,IAAK,gEACLb,MAAO,CAAC,SAET,CACCU,KAAM,aACNL,GAAI,OACJQ,IAAK,gEACLb,MAAO,CAAC,SAET,CACCU,KAAM,YACNL,GAAI,OACJQ,IAAK,+DACLb,MAAO,CAAC,OAAO,WAEhB,CACCU,KAAM,WACNL,GAAI,OACJQ,IAAK,8DACLb,MAAO,CAAC,UAET,CACCU,KAAM,WACNL,GAAI,OACJQ,IAAK,8DACLb,MAAO,CAAC,QAET,CACCU,KAAM,SACNL,GAAI,OACJQ,IAAK,4DACLb,MAAO,CAAC,SAAU,WAEnB,CACCU,KAAM,UACNL,GAAI,OACJQ,IAAK,6DACLb,MAAO,CAAC,WAET,CACCU,KAAM,QACNL,GAAI,OACJQ,IAAK,2DACLb,MAAO,CAAC,WAET,CACCU,KAAM,UACNL,GAAI,OACJQ,IAAK,kEACLb,MAAO,CAAC,aAET,CACCU,KAAM,YACNL,GAAI,OACJQ,IAAK,+DACLb,MAAO,CAAC,WAET,CACCU,KAAM,aACNL,GAAI,OACJQ,IAAK,gEACLb,MAAO,CAAC,UAET,CACCU,KAAM,SACNL,GAAI,OACJQ,IAAK,4DACLb,MAAO,CAAC,aAET,CACCU,KAAM,YACNL,GAAI,OACJQ,IAAK,+DACLb,MAAO,CAAC,QAAQ,aAEjB,CACCU,KAAM,UACNL,GAAI,OACJQ,IAAK,6DACLb,MAAO,CAAC,OAAQ,WAEjB,CACCU,KAAM,YACNL,GAAI,OACJQ,IAAK,+DACLb,MAAO,CAAC,WAAW,UAEpB,CACCU,KAAM,WACNL,GAAI,OACJQ,IAAK,8DACLb,MAAO,CAAC,QAAQ,QAEjB,CACCU,KAAM,SACNL,GAAI,OACJQ,IAAK,4DACLb,MAAO,CAAC,UAET,CACCU,KAAM,UACNL,GAAI,OACJQ,IAAK,6DACLb,MAAO,CAAC,QAAQ,WAEjB,CACCU,KAAM,SACNL,GAAI,OACJQ,IAAK,4DACLb,MAAO,CAAC,QAAQ,WAEjB,CACCU,KAAM,UACNL,GAAI,OACJQ,IAAK,6DACLb,MAAO,CAAC,MAAO,WAEhB,CACCU,KAAM,UACNL,GAAI,OACJQ,IAAK,6DACLb,MAAO,CAAC,OAAQ,UAEjB,CACCU,KAAM,aACNL,GAAI,OACJQ,IAAK,gEACLb,MAAO,CAAC,WAET,CACCU,KAAM,WACNL,GAAI,OACJQ,IAAK,8DACLb,MAAO,CAAC,MAAM,WAEf,CACCU,KAAM,YACNL,GAAI,OACJQ,IAAK,+DACLb,MAAO,CAAC,QAAQ,UAEjB,CACCU,KAAM,UACNL,GAAI,OACJQ,IAAK,6DACLb,MAAO,CAAC,SAET,CACCU,KAAM,UACNL,GAAI,OACJQ,IAAK,6DACLb,MAAO,CAAC,OAAQ,WAEjB,CACCU,KAAM,aACNL,GAAI,OACJQ,IAAK,gEACLb,MAAO,CAAC,MAAO,W,EAIhBA,MAAQ,CACN,SAAU,OAAQ,QAAS,WAAY,QAAS,MAAO,WAAY,SACnE,SAAU,SAAU,MAAO,OAAQ,QAAS,OAAQ,QAAS,S,EAG/DwB,YAAc,EAAKxB,MAAMC,KAAI,SAAAC,GAC5B,OAAO,kBAAC,IAAD,CAAOuB,KAAM,UAAYvB,EAAME,IAAKF,GAC3C,kBAAC,EAAD,CAAUe,SAAU,EAAKA,SAAUf,KAAMA,Q,EAI1CwB,YAAc,EAAKT,SAAShB,KAAI,SAAAQ,GAC/B,OAAO,kBAAC,IAAD,CAAOgB,KAAM,IAAMhB,EAAQC,KAAMN,IAAKK,EAAQJ,IACrD,kBAAC,EAAD,CAAaI,QAASA,Q,uDAMrB,OACE,yBAAKE,UAAU,QACb,kBAAC,EAAD,CAAeX,MAAOF,KAAKE,QAC3B,kBAAC,IAAD,CAAOyB,KAAK,WAAWE,OAAK,GAC1B,kBAAC,EAAD,CAAUV,SAAUnB,KAAKmB,SAAUf,KAAK,UAE/CJ,KAAK0B,YACL1B,KAAK4B,iB,GAnNUpB,IAAMC,WCKJqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1388defe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NavigationBar extends React.Component {\r\n\r\n    render() {\r\n\r\n        const pokemonTypes = this.props.types.map(type => {\r\n            return <Link to={\"/types/\" + type} key={type}>\r\n                <li>{type}</li>\r\n            </Link>\r\n        })\r\n\r\n        return(\r\n            <ul id=\"navbar\">\r\n                <Link to=\"/\"><li id=\"home\" key=\"Home\">Home</li></Link>\r\n                {pokemonTypes}\r\n            </ul>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default NavigationBar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Pokemon extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div id=\"card-container\">\r\n                <Link to={\"/\" + this.props.pokemon.name}>\r\n                    <div className=\"pokemon-cards\">\r\n                        <div className=\"pokemon-name\">{this.props.pokemon.name}</div>\r\n                        <img src={this.props.pokemon.img} alt={this.props.pokemon.name} className=\"pokemon-img\"/>\r\n                        <div className=\"pokomon-id\">{this.props.pokemon.id}</div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Pokemon;","import React from \"react\";\r\nimport Pokemon from \"./Pokemon\";\r\n\r\nclass Pokemons extends React.Component {\r\n\r\n    filteredType = this.props.pokemons.filter(pokemon => {\r\n        return pokemon.types.includes(this.props.type)\r\n    })\r\n    \r\n    render() {\r\n\r\n        let pokemonCardsFiltered = this.filteredType.map(pokemon => {\r\n            return <Pokemon key={pokemon.id} pokemon={pokemon}/>\r\n        })\r\n\r\n        let pokemonCardsAll = this.props.pokemons.map(pokemon => {\r\n            return <Pokemon key={pokemon.id} pokemon={pokemon}/>\r\n        })\r\n        \r\n        return(\r\n            <div className=\"content\">\r\n                {this.props.type === \"Home\" ? pokemonCardsAll : pokemonCardsFiltered}\r\n            </div>\r\n        )\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport default Pokemons;","import React from \"react\";\r\n\r\nclass PokemonInfo extends React.Component {\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"pokemon-info\">\r\n                <img src={this.props.pokemon.img} alt={this.props.pokemon.name} className=\"pokemon-img\"/>\r\n                <div className=\"text-info\">\r\n                    <h2>{this.props.pokemon.name}</h2>\r\n                    <hr/>\r\n                    <p>\r\n                        Pokémon, also known as Pocket Monsters in Japan, \r\n                        is a Japanese media franchise managed by the Pokémon Company, \r\n                        a company founded and with shares divided between Nintendo, Game Freak, and Creatures.\r\n                        The term \"Pokémon\", in addition to referring to the Pokémon franchise itself, \r\n                        also collectively refers to the 896 fictional species that have made appearances in Pokémon media \r\n                        as of the release of the eighth generation titles Pokémon Sword and Shield.\r\n                    </p>\r\n                    <p>\r\n                        The concept of the Pokémon universe, in both the video games and the general fictional world of Pokémon, \r\n                        stems from the hobby of insect collecting, a popular pastime which Tajiri enjoyed as a child.\r\n                        Players are designated as Pokémon Trainers and have three general goals: \r\n                        to complete the regional Pokédex by collecting all of the available Pokémon species found in the \r\n                        fictional region where a game takes place, to complete the national Pokédex by transferring Pokémon \r\n                        from other regions, and to train a team of powerful Pokémon from those they have caught \r\n                        to compete against teams owned by other Trainers so they may eventually win the Pokémon League \r\n                        and become the regional Champion.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default PokemonInfo;","import React from 'react';\nimport './App.css';\nimport NavigationBar from \"./components/NavigationBar\";\nimport Pokemons from \"./components/pokemons/Pokemons\";\nimport PokemonInfo from \"./components/pokemons/PokemonInfo\";\nimport { Route } from 'react-router';\n\nclass App extends React.Component {\n\n  pokemons = [\n\t\t{\n\t\t\tname: \"Bulbasaur\",\n\t\t\tid: \"#001\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/bulbasaur.png\",\n\t\t\ttypes: [\"Grass\",\"Poison\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Ivysaur\",\n\t\t\tid: \"#002\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/ivysaur.png\",\n\t\t\ttypes: [\"Grass\",\"Poison\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Venusaur\",\n\t\t\tid: \"#003\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/venusaur.png\",\n\t\t\ttypes: [\"Grass\",\"Poison\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Charmander\",\n\t\t\tid: \"#004\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/charmander.png\",\n\t\t\ttypes: [\"Fire\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Charmeleon\",\n\t\t\tid: \"#005\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/charmeleon.png\",\n\t\t\ttypes: [\"Fire\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Charizard\",\n\t\t\tid: \"#006\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/charizard.png\",\n\t\t\ttypes: [\"Fire\",\"Flying\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Squirtle\",\n\t\t\tid: \"#007\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/squirtle.png\",\n\t\t\ttypes: [\"Water\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Caterpie\",\n\t\t\tid: \"#010\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/caterpie.png\",\n\t\t\ttypes: [\"Bug\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Pidgey\",\n\t\t\tid: \"#016\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/pidgey.png\",\n\t\t\ttypes: [\"Normal\", \"Flying\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Rattata\",\n\t\t\tid: \"#019\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/rattata.png\",\n\t\t\ttypes: [\"Normal\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Arbok\",\n\t\t\tid: \"#024\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/arbok.png\",\n\t\t\ttypes: [\"Poison\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Pikachu\",\n\t\t\tid: \"#025\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/pikachu-alt2.png\",\n\t\t\ttypes: [\"Electric\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Sandshrew\",\n\t\t\tid: \"#027\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/sandshrew.png\",\n\t\t\ttypes: [\"Ground\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Jigglypuff\",\n\t\t\tid: \"#039\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/jigglypuff.png\",\n\t\t\ttypes: [\"Fairy\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Mankey\",\n\t\t\tid: \"#056\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/mankey.png\",\n\t\t\ttypes: [\"Fighting\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Poliwrath\",\n\t\t\tid: \"#062\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/poliwrath.png\",\n\t\t\ttypes: [\"Water\",\"Fighting\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Geodude\",\n\t\t\tid: \"#074\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/geodude.png\",\n\t\t\ttypes: [\"Rock\", \"Ground\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Magnemite\",\n\t\t\tid: \"#081\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/magnemite.png\",\n\t\t\ttypes: [\"Electric\",\"Steel\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Cloyster\",\n\t\t\tid: \"#091\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/cloyster.png\",\n\t\t\ttypes: [\"Water\",\"Ice\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Gastly\",\n\t\t\tid: \"#092\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/gastly.png\",\n\t\t\ttypes: [\"Ghost\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Haunter\",\n\t\t\tid: \"#093\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/haunter.png\",\n\t\t\ttypes: [\"Ghost\",\"Poison\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Gengar\",\n\t\t\tid: \"#094\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/gengar.png\",\n\t\t\ttypes: [\"Ghost\",\"Poison\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Scyther\",\n\t\t\tid: \"#123\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/scyther.png\",\n\t\t\ttypes: [\"Bug\", \"Flying\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Omanyte\",\n\t\t\tid: \"#138\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/omanyte.png\",\n\t\t\ttypes: [\"Rock\", \"Water\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Aerodactyl\",\n\t\t\tid: \"#142\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/aerodactyl.png\",\n\t\t\ttypes: [\"Flying\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Articuno\",\n\t\t\tid: \"#144\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/articuno.png\",\n\t\t\ttypes: [\"Ice\",\"Flying\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Azumarill\",\n\t\t\tid: \"#184\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/azumarill.png\",\n\t\t\ttypes: [\"Water\",\"Fairy\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Umbreon\",\n\t\t\tid: \"#197\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/umbreon.png\",\n\t\t\ttypes: [\"Dark\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Murkrow\",\n\t\t\tid: \"#198\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/murkrow.png\",\n\t\t\ttypes: [\"Dark\", \"Flying\"]\n\t\t},\n\t\t{\n\t\t\tname: \"Forretress\",\n\t\t\tid: \"#205\",\n\t\t\timg: \"https://img.pokemondb.net/artwork/vector/large/forretress.png\",\n\t\t\ttypes: [\"Bug\", \"Steel\"]\n\t\t},\n  ];\n  \n  types = [\n    \"Normal\", \"Fire\", \"Water\", \"Electric\", \"Grass\", \"Ice\", \"Fighting\", \"Poison\", \n    \"Ground\", \"Flying\", \"Bug\", \"Rock\", \"Ghost\", \"Dark\", \"Steel\", \"Fairy\"\n  ];\n\n  pokemonType = this.types.map(type => {\n\t  return <Route path={\"/types/\" + type} key={type}>\n\t\t\t<Pokemons pokemons={this.pokemons} type={type}/>\n\t\t</Route>\n  })\n\n  pokemonInfo = this.pokemons.map(pokemon => {\n\t  return <Route path={\"/\" + pokemon.name} key={pokemon.id}>\n\t\t\t<PokemonInfo pokemon={pokemon}/>\n\t\t</Route>\n  })\n\n  render() {\n\n    return (\n      <div className=\"body\">\n        <NavigationBar types={this.types}/>\n        <Route path=\"/pokedex\" exact>\n          <Pokemons pokemons={this.pokemons} type=\"Home\"/>\n        </Route>\n\t\t{this.pokemonType}\n\t\t{this.pokemonInfo}\n      </div>\n    )\n\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>    \n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}